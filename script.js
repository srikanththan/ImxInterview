const chatWindow = document.getElementById('chat-window');
const chatForm = document.getElementById('chat-form');
const chatInput = document.getElementById('chat-input');
const fileInput = document.getElementById('file-input');
const aadhaarInput = document.getElementById('aadhaar-input');
const uploadBtn = document.getElementById('upload-btn');
const micBtn = document.getElementById('mic-btn');
const pauseBtn = document.getElementById('pause-btn');

// --- Supabase Initialization ---
// IMPORTANT: Replace with your actual Supabase URL and Key
const SUPABASE_URL = 'https://jhnbukaukfpfqxmuintp.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpobmJ1a2F1a2ZwZnF4bXVpbnRwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4MzU1NzUsImV4cCI6MjA2NjQxMTU3NX0.tryh8bChBEiuxyvKq9VjJL7sYsn5o7d0MGdezZLIj78';
const supabaseClient = supabase.createClient(SUPABASE_URL, SUPABASE_KEY);
let state = 'waiting_for_hi';
let repromptCount = 0;
const maxReprompts = 3;
let interviewTimeout = null; // Timer for inactivity

// --- Data Storage ---
const userResponses = {
    name: '',
    resumeFile: null,
    whatsappNumber: '',
    languagePreference: null,
    interviewAnswers: [],
    payStructure: null,
    trainingCommitment: null,
    aadhaarConsent: null,
    aadhaarFile: null
};

// --- Localized Interview Questions ---
const localizedQuestions = {
    english: [
        {
            question: "üë£ How will you find 20 shops that need inventory software like iAmX?\nWhere will you go? What will you do first?",
            example: "üí° Example: \"I'll go to busy markets, check shops using manual billing, and ask them about stock or billing problems. Then I'll explain the app.\""
        },
        {
            question: "üó£Ô∏è You enter a shop that uses old software or manual bills.\nWhat will be your opening line to make the owner listen?",
            example: "üí° Example: \"Sir, are you using any software? I have an app made for Indian shops to manage stock and billing ‚Äî can I show you for 2 mins?\""
        },
        {
            question: "üí¨ Shopkeeper says: \"I already use Tally or Zoho.\"\nWhat will you say to help him understand that iAmX is different?",
            example: "üí° Example: \"Sir, Tally is great for accounts, but iAmX is for stock, billing, barcode, and simple shop use ‚Äî very easy and faster.\""
        },
        {
            question: "üì± They ask: \"Can I use iAmX on phone? Is it easy?\"\nHow will you answer?",
            example: "üí° Example: \"Yes sir, iAmX works on mobile, tablet, or system. It's made for shop use and very easy to learn.\""
        },
        {
            question: "üì¶ A shop with 1000+ items asks: \"Can your app handle barcode, stock, sales reports?\"\nHow will you explain the key features?",
            example: "üí° Example: \"Yes sir, barcode scan, stock in-out, daily sales, and reports are all included. It's made for Indian shops with many products.\""
        },
        {
            question: "üß† Which types of businesses do you think need iAmX the most?\nGive 2‚Äì3 examples and why.",
            example: "üí° Example: \"Kirana stores, mobile shops, clothing stores ‚Äì because they have high stock and daily sales, and need proper control.\""
        },
        {
            question: "üí∞ If a customer asks about price and offers, how will you answer without sounding unsure?",
            example: "üí° Example: \"Sir, ‚Çπ1500/month with full features. If you take 1 year, you get 1 month free. No extra charges ‚Äî full support included.\""
        },
        {
            question: "üéØ In your first 30 days, how many shops will you visit? How many can you close?\nGive a real, honest number.",
            example: "üí° Example: \"I'll visit 50‚Äì60 shops. I can close 15‚Äì25 easily. If I get multi-store chains, I can cross 50+ in 1‚Äì2 months.\""
        }
    ],
    telugu: [
        {
            question: "üë£ iAmX ‡∞µ‡∞Ç‡∞ü‡∞ø ‡∞á‡∞®‡±ç‡∞µ‡±Ü‡∞Ç‡∞ü‡∞∞‡±Ä ‡∞∏‡∞æ‡∞´‡±ç‡∞ü‡±ç‚Äå‡∞µ‡±á‡∞∞‡±ç ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Æ‡±à‡∞® 20 ‡∞∑‡∞æ‡∞™‡±Å‡∞≤‡∞®‡±Å ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞≤‡∞æ ‡∞ï‡∞®‡±Å‡∞ó‡±ä‡∞Ç‡∞ü‡∞æ‡∞∞‡±Å?\n‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞ï‡±ç‡∞ï‡∞°‡∞ø‡∞ï‡∞ø ‡∞µ‡±Ü‡∞≥‡∞§‡∞æ‡∞∞‡±Å? ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞Æ‡±ä‡∞¶‡∞ü ‡∞è‡∞Æ‡∞ø ‡∞ö‡±á‡∞∏‡±ç‡∞§‡∞æ‡∞∞‡±Å?",
            example: "üí° ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£: \"‡∞®‡±á‡∞®‡±Å ‡∞∞‡∞¶‡±ç‡∞¶‡±Ä‡∞ó‡∞æ ‡∞â‡∞Ç‡∞°‡±á ‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç‚Äå‡∞≤‡∞ï‡±Å ‡∞µ‡±Ü‡∞≥‡±ç‡∞≤‡∞ø, ‡∞Æ‡∞æ‡∞®‡±ç‡∞Ø‡±Å‡∞µ‡∞≤‡±ç ‡∞¨‡∞ø‡∞≤‡±ç‡∞≤‡∞ø‡∞Ç‡∞ó‡±ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡±á ‡∞∑‡∞æ‡∞™‡±Å‡∞≤‡∞®‡±Å ‡∞§‡∞®‡∞ø‡∞ñ‡±Ä ‡∞ö‡±á‡∞∏‡±ç‡∞§‡∞æ‡∞®‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞µ‡∞æ‡∞∞‡∞ø ‡∞∏‡±ç‡∞ü‡∞æ‡∞ï‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞¨‡∞ø‡∞≤‡±ç‡∞≤‡∞ø‡∞Ç‡∞ó‡±ç ‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞µ‡∞æ‡∞∞‡∞ø‡∞®‡∞ø ‡∞Ö‡∞°‡±Å‡∞ó‡±Å‡∞§‡∞æ‡∞®‡±Å. ‡∞Ü‡∞™‡±à ‡∞®‡±á‡∞®‡±Å ‡∞Ø‡∞æ‡∞™‡±ç‚Äå‡∞®‡±Å ‡∞µ‡∞ø‡∞µ‡∞∞‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞®‡±Å.\""
        },
        {
            question: "üó£Ô∏è ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞™‡∞æ‡∞§ ‡∞∏‡∞æ‡∞´‡±ç‡∞ü‡±ç‚Äå‡∞µ‡±á‡∞∞‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞Æ‡∞æ‡∞®‡±ç‡∞Ø‡±Å‡∞µ‡∞≤‡±ç ‡∞¨‡∞ø‡∞≤‡±ç‡∞≤‡±Å‡∞≤‡∞®‡±Å ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡±á ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞Ç‡∞≤‡±ã‡∞ï‡∞ø ‡∞™‡±ç‡∞∞‡∞µ‡±á‡∞∂‡∞ø‡∞Ç‡∞ö‡∞æ‡∞∞‡±Å.\n‡∞Ø‡∞ú‡∞Æ‡∞æ‡∞®‡∞ø ‡∞µ‡∞ø‡∞®‡±á‡∞≤‡∞æ ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠ ‡∞µ‡∞æ‡∞ï‡±ç‡∞Ø‡∞Ç ‡∞è‡∞Æ‡∞ø‡∞ü‡∞ø?",
            example: "üí° ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£: \"‡∞∏‡∞∞‡±ç, ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞è‡∞¶‡±à‡∞®‡∞æ ‡∞∏‡∞æ‡∞´‡±ç‡∞ü‡±ç‚Äå‡∞µ‡±á‡∞∞‡±ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞∞‡∞æ? ‡∞≠‡∞æ‡∞∞‡∞§‡±Ä‡∞Ø ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞æ‡∞≤ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞∏‡±ç‡∞ü‡∞æ‡∞ï‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞¨‡∞ø‡∞≤‡±ç‡∞≤‡∞ø‡∞Ç‡∞ó‡±ç ‡∞®‡∞ø‡∞∞‡±ç‡∞µ‡∞π‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞®‡∞æ ‡∞¶‡∞ó‡±ç‡∞ó‡∞∞ ‡∞í‡∞ï ‡∞Ø‡∞æ‡∞™‡±ç ‡∞â‡∞Ç‡∞¶‡∞ø - ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä‡∞ï‡±Å 2 ‡∞®‡∞ø‡∞Æ‡∞ø‡∞∑‡∞æ‡∞≤‡±Å ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞µ‡∞ö‡±ç‡∞ö‡∞æ?\""
        },
        {
            question: "üí¨ ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞¶‡∞æ‡∞∞‡±Å ‡∞á‡∞≤‡∞æ ‡∞Ö‡∞Ç‡∞ü‡∞æ‡∞°‡±Å: \"‡∞®‡±á‡∞®‡±Å ‡∞á‡∞™‡±ç‡∞™‡∞ü‡∞ø‡∞ï‡±á ‡∞ü‡∞æ‡∞≤‡±Ä ‡∞≤‡±á‡∞¶‡∞æ ‡∞ú‡±ã‡∞π‡±ã‡∞®‡±Å ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞®‡±Å.\"\niAmX ‡∞≠‡∞ø‡∞®‡±ç‡∞®‡∞Ç‡∞ó‡∞æ ‡∞â‡∞Ç‡∞¶‡∞®‡∞ø ‡∞Ö‡∞§‡∞®‡∞ø‡∞ï‡∞ø ‡∞Ö‡∞∞‡±ç‡∞•‡∞Æ‡∞Ø‡±ç‡∞Ø‡±á‡∞≤‡∞æ ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞è‡∞Æ‡∞ø ‡∞ö‡±Ü‡∞¨‡±Å‡∞§‡∞æ‡∞∞‡±Å?",
            example: "üí° ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£: \"‡∞∏‡∞∞‡±ç, ‡∞ü‡∞æ‡∞≤‡±Ä ‡∞Ö‡∞ï‡±å‡∞Ç‡∞ü‡±ç‡∞∏‡±ç ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞ö‡∞æ‡∞≤‡∞æ ‡∞¨‡∞æ‡∞ó‡±Å‡∞Ç‡∞¶‡∞ø, ‡∞ï‡∞æ‡∞®‡±Ä iAmX ‡∞∏‡±ç‡∞ü‡∞æ‡∞ï‡±ç, ‡∞¨‡∞ø‡∞≤‡±ç‡∞≤‡∞ø‡∞Ç‡∞ó‡±ç, ‡∞¨‡∞æ‡∞∞‡±ç‚Äå‡∞ï‡±ã‡∞°‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞æ‡∞ß‡∞æ‡∞∞‡∞£ ‡∞∑‡∞æ‡∞™‡±ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç ‡∞ï‡±ã‡∞∏‡∞Ç - ‡∞ö‡∞æ‡∞≤‡∞æ ‡∞∏‡±Å‡∞≤‡∞≠‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞µ‡±á‡∞ó‡∞Ç‡∞ó‡∞æ ‡∞â‡∞Ç‡∞ü‡±Å‡∞Ç‡∞¶‡∞ø.\""
        },
        {
            question: "üì± ‡∞µ‡∞æ‡∞∞‡±Å ‡∞Ö‡∞°‡±Å‡∞ó‡±Å‡∞§‡∞æ‡∞∞‡±Å: \"‡∞®‡±á‡∞®‡±Å ‡∞´‡±ã‡∞®‡±ç‚Äå‡∞≤‡±ã iAmX ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞µ‡∞ö‡±ç‡∞ö‡∞æ? ‡∞á‡∞¶‡∞ø ‡∞∏‡±Å‡∞≤‡∞≠‡∞Æ‡±á‡∞®‡∞æ?\"\n‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞≤‡∞æ ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç ‡∞á‡∞∏‡±ç‡∞§‡∞æ‡∞∞‡±Å?",
            example: "üí° ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£: \"‡∞Ö‡∞µ‡±Å‡∞®‡±Å ‡∞∏‡∞∞‡±ç, iAmX ‡∞Æ‡±ä‡∞¨‡±à‡∞≤‡±ç, ‡∞ü‡∞æ‡∞¨‡±ç‡∞≤‡±Ü‡∞ü‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞∏‡∞ø‡∞∏‡±ç‡∞ü‡∞Æ‡±ç‚Äå‡∞≤‡±ã ‡∞™‡∞®‡∞ø‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø. ‡∞á‡∞¶‡∞ø ‡∞∑‡∞æ‡∞™‡±ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞§‡∞Ø‡∞æ‡∞∞‡±Å ‡∞ö‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞®‡±á‡∞∞‡±ç‡∞ö‡±Å‡∞ï‡±ã‡∞µ‡∞°‡∞Ç ‡∞ö‡∞æ‡∞≤‡∞æ ‡∞∏‡±Å‡∞≤‡∞≠‡∞Ç.\""
        },
        {
            question: "üì¶ 1000+ ‡∞µ‡∞∏‡±ç‡∞§‡±Å‡∞µ‡±Å‡∞≤‡±Å ‡∞â‡∞®‡±ç‡∞® ‡∞í‡∞ï ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞Ç ‡∞Ö‡∞°‡±Å‡∞ó‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø: \"‡∞Æ‡±Ä ‡∞Ø‡∞æ‡∞™‡±ç ‡∞¨‡∞æ‡∞∞‡±ç‚Äå‡∞ï‡±ã‡∞°‡±ç, ‡∞∏‡±ç‡∞ü‡∞æ‡∞ï‡±ç, ‡∞Ö‡∞Æ‡±ç‡∞Æ‡∞ï‡∞æ‡∞≤ ‡∞®‡∞ø‡∞µ‡±á‡∞¶‡∞ø‡∞ï‡∞≤‡∞®‡±Å ‡∞®‡∞ø‡∞∞‡±ç‡∞µ‡∞π‡∞ø‡∞Ç‡∞ö‡∞ó‡∞≤‡∞¶‡∞æ?\"\n‡∞Æ‡±Ä‡∞∞‡±Å ‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø ‡∞≤‡∞ï‡±ç‡∞∑‡∞£‡∞æ‡∞≤‡∞®‡±Å ‡∞é‡∞≤‡∞æ ‡∞µ‡∞ø‡∞µ‡∞∞‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞∞‡±Å?",
            example: "üí° ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£: \"‡∞Ö‡∞µ‡±Å‡∞®‡±Å ‡∞∏‡∞∞‡±ç, ‡∞¨‡∞æ‡∞∞‡±ç‚Äå‡∞ï‡±ã‡∞°‡±ç ‡∞∏‡±ç‡∞ï‡∞æ‡∞®‡±ç, ‡∞∏‡±ç‡∞ü‡∞æ‡∞ï‡±ç ‡∞á‡∞®‡±ç-‡∞Ö‡∞µ‡±Å‡∞ü‡±ç, ‡∞∞‡±ã‡∞ú‡±Å‡∞µ‡∞æ‡∞∞‡±Ä ‡∞Ö‡∞Æ‡±ç‡∞Æ‡∞ï‡∞æ‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞®‡∞ø‡∞µ‡±á‡∞¶‡∞ø‡∞ï‡∞≤‡±Å ‡∞Ö‡∞®‡±ç‡∞®‡±Ä ‡∞ö‡±á‡∞∞‡±ç‡∞ö‡∞¨‡∞°‡±ç‡∞°‡∞æ‡∞Ø‡∞ø. ‡∞á‡∞¶‡∞ø ‡∞ö‡∞æ‡∞≤‡∞æ ‡∞â‡∞§‡±ç‡∞™‡∞§‡±ç‡∞§‡±Å‡∞≤‡∞§‡±ã ‡∞≠‡∞æ‡∞∞‡∞§‡±Ä‡∞Ø ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞æ‡∞≤ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞§‡∞Ø‡∞æ‡∞∞‡±Å ‡∞ö‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø.\""
        },
        {
            question: "üß† ‡∞è ‡∞∞‡∞ï‡∞Æ‡±à‡∞® ‡∞µ‡±ç‡∞Ø‡∞æ‡∞™‡∞æ‡∞∞‡∞æ‡∞≤‡∞ï‡±Å iAmX ‡∞Ö‡∞§‡±ç‡∞Ø‡∞Ç‡∞§ ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Æ‡∞®‡∞ø ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞≠‡∞æ‡∞µ‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞∞‡±Å?\n2‚Äì3 ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£‡∞≤‡±Å ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞é‡∞Ç‡∞¶‡±Å‡∞ï‡±Å?",
            example: "üí° ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£: \"‡∞ï‡∞ø‡∞∞‡∞æ‡∞£‡∞æ ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞æ‡∞≤‡±Å, ‡∞Æ‡±ä‡∞¨‡±à‡∞≤‡±ç ‡∞∑‡∞æ‡∞™‡±Å‡∞≤‡±Å, ‡∞¨‡∞ü‡±ç‡∞ü‡∞≤ ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞æ‡∞≤‡±Å - ‡∞é‡∞Ç‡∞¶‡±Å‡∞ï‡∞Ç‡∞ü‡±á ‡∞µ‡∞æ‡∞ü‡∞ø‡∞ï‡∞ø ‡∞Ö‡∞ß‡∞ø‡∞ï ‡∞∏‡±ç‡∞ü‡∞æ‡∞ï‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∞‡±ã‡∞ú‡±Å‡∞µ‡∞æ‡∞∞‡±Ä ‡∞Ö‡∞Æ‡±ç‡∞Æ‡∞ï‡∞æ‡∞≤‡±Å ‡∞â‡∞Ç‡∞ü‡∞æ‡∞Ø‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞∞‡±à‡∞® ‡∞®‡∞ø‡∞Ø‡∞Ç‡∞§‡±ç‡∞∞‡∞£ ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Ç.\""
        },
        {
            question: "üí∞ ‡∞í‡∞ï ‡∞ï‡∞∏‡±ç‡∞ü‡∞Æ‡∞∞‡±ç ‡∞ß‡∞∞ ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞Ü‡∞´‡∞∞‡±ç‚Äå‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞Ö‡∞°‡∞ø‡∞ó‡∞ø‡∞§‡±á, ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞ñ‡∞ö‡±ç‡∞ö‡∞ø‡∞§‡∞Ç‡∞ó‡∞æ ‡∞§‡±Ü‡∞≤‡∞ø‡∞Ø‡∞ï‡±Å‡∞Ç‡∞°‡∞æ ‡∞é‡∞≤‡∞æ ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç ‡∞á‡∞∏‡±ç‡∞§‡∞æ‡∞∞‡±Å?",
            example: "üí° ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£: \"‡∞∏‡∞∞‡±ç, ‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞ø ‡∞´‡±Ä‡∞ö‡∞∞‡±ç‡∞≤‡∞§‡±ã ‡∞®‡±Ü‡∞≤‡∞ï‡±Å ‚Çπ1500. ‡∞Æ‡±Ä‡∞∞‡±Å 1 ‡∞∏‡∞Ç‡∞µ‡∞§‡±ç‡∞∏‡∞∞‡∞Ç ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±Å‡∞Ç‡∞ü‡±á, ‡∞Æ‡±Ä‡∞ï‡±Å 1 ‡∞®‡±Ü‡∞≤ ‡∞â‡∞ö‡∞ø‡∞§‡∞Ç ‡∞≤‡∞≠‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø. ‡∞Ö‡∞¶‡∞®‡∞™‡±Å ‡∞õ‡∞æ‡∞∞‡±ç‡∞ú‡±Ä‡∞≤‡±Å ‡∞≤‡±á‡∞µ‡±Å - ‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞ø ‡∞Æ‡∞¶‡±ç‡∞¶‡∞§‡±Å ‡∞ö‡±á‡∞∞‡±ç‡∞ö‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø.\""
        },
        {
            question: "üéØ ‡∞Æ‡±Ä ‡∞Æ‡±ä‡∞¶‡∞ü‡∞ø 30 ‡∞∞‡±ã‡∞ú‡±Å‡∞≤‡∞≤‡±ã, ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞®‡±ç‡∞®‡∞ø ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞æ‡∞≤‡∞®‡±Å ‡∞∏‡∞Ç‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞∞‡±Å? ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞®‡±ç‡∞®‡∞ø ‡∞Æ‡±Ç‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡∞ó‡∞≤‡∞∞‡±Å?\n‡∞®‡∞ø‡∞ú‡∞Æ‡±à‡∞®, ‡∞®‡∞ø‡∞ú‡∞æ‡∞Ø‡∞ø‡∞§‡±Ä ‡∞ó‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø‡∞®‡±Å ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø.",
            example: "üí° ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£: \"‡∞®‡±á‡∞®‡±Å 50-60 ‡∞¶‡±Å‡∞ï‡∞æ‡∞£‡∞æ‡∞≤‡∞®‡±Å ‡∞∏‡∞Ç‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞®‡±Å. ‡∞®‡±á‡∞®‡±Å 15-25 ‡∞∏‡±Å‡∞≤‡∞≠‡∞Ç‡∞ó‡∞æ ‡∞Æ‡±Ç‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å. ‡∞®‡∞æ‡∞ï‡±Å ‡∞¨‡∞π‡±Å‡∞≥-‡∞∏‡±ç‡∞ü‡±ã‡∞∞‡±ç ‡∞ö‡±à‡∞®‡±ç‚Äå‡∞≤‡±Å ‡∞≤‡∞≠‡∞ø‡∞∏‡±ç‡∞§‡±á, ‡∞®‡±á‡∞®‡±Å 1-2 ‡∞®‡±Ü‡∞≤‡∞≤‡±ç‡∞≤‡±ã 50+ ‡∞¶‡∞æ‡∞ü‡∞ó‡∞≤‡∞®‡±Å.\""
        }
    ],
    hindi: [
        {
            question: "üë£ iAmX ‡§ú‡•à‡§∏‡•á ‡§á‡§®‡•ç‡§µ‡•á‡§Ç‡§ü‡•ç‡§∞‡•Ä ‡§∏‡•â‡§´‡§º‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§µ‡§æ‡§≤‡•Ä 20 ‡§¶‡•Å‡§ï‡§æ‡§®‡•á‡§Ç ‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§ñ‡•ã‡§ú‡•á‡§Ç‡§ó‡•á?\n‡§Ü‡§™ ‡§ï‡§π‡§æ‡§Å ‡§ú‡§æ‡§Ø‡•á‡§Ç‡§ó‡•á? ‡§Ü‡§™ ‡§™‡§π‡§≤‡•á ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á?",
            example: "üí° ‡§â‡§¶‡§æ‡§π‡§∞‡§£: \"‡§Æ‡•à‡§Ç ‡§µ‡•ç‡§Ø‡§∏‡•ç‡§§ ‡§¨‡§æ‡§ú‡§º‡§æ‡§∞‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§ä‡§Å‡§ó‡§æ, ‡§Æ‡•à‡§®‡•Å‡§Ö‡§≤ ‡§¨‡§ø‡§≤‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®‡•ã‡§Ç ‡§ï‡•Ä ‡§ú‡§æ‡§Å‡§ö ‡§ï‡§∞‡•Ç‡§Å‡§ó‡§æ, ‡§î‡§∞ ‡§â‡§®‡§∏‡•á ‡§â‡§®‡§ï‡•á ‡§∏‡•ç‡§ü‡•â‡§ï ‡§Ø‡§æ ‡§¨‡§ø‡§≤‡§ø‡§Ç‡§ó ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡•Ç‡§Å‡§ó‡§æ‡•§ ‡§´‡§ø‡§∞ ‡§Æ‡•à‡§Ç ‡§ê‡§™ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§§‡§æ‡§ä‡§Å‡§ó‡§æ‡•§\""
        },
        {
            question: "üó£Ô∏è ‡§Ü‡§™ ‡§è‡§ï ‡§ê‡§∏‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§µ‡•á‡§∂ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç ‡§ú‡•ã ‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§Ø‡§æ ‡§Æ‡•à‡§®‡•Å‡§Ö‡§≤ ‡§¨‡§ø‡§≤ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§\n‡§Æ‡§æ‡§≤‡§ø‡§ï ‡§ï‡•ã ‡§∏‡•Å‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™‡§ï‡•Ä ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§≤‡§æ‡§á‡§® ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•ã‡§ó‡•Ä?",
            example: "üí° ‡§â‡§¶‡§æ‡§π‡§∞‡§£: \"‡§∏‡§∞, ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§ï‡•ã‡§à ‡§∏‡•â‡§´‡•ç‡§ü‡§µ‡•á‡§Ø‡§∞ ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç? ‡§Æ‡•á‡§∞‡•á ‡§™‡§æ‡§∏ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§¶‡•Å‡§ï‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•ç‡§ü‡•â‡§ï ‡§î‡§∞ ‡§¨‡§ø‡§≤‡§ø‡§Ç‡§ó ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§ê‡§™ ‡§π‡•à - ‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã 2 ‡§Æ‡§ø‡§®‡§ü ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¶‡§ø‡§ñ‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å?\""
        },
        {
            question: "üí¨ ‡§¶‡•Å‡§ï‡§æ‡§®‡§¶‡§æ‡§∞ ‡§ï‡§π‡§§‡§æ ‡§π‡•à: \"‡§Æ‡•à‡§Ç ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§π‡•Ä ‡§ü‡•à‡§≤‡•Ä ‡§Ø‡§æ ‡§ú‡§º‡•ã‡§π‡•ã ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡§æ ‡§π‡•Ç‡§Å‡•§\"\niAmX ‡§Ö‡§≤‡§ó ‡§π‡•à, ‡§Ü‡§™ ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§π‡•á‡§Ç‡§ó‡•á?",
            example: "üí° ‡§â‡§¶‡§æ‡§π‡§∞‡§£: \"‡§∏‡§∞, ‡§ü‡•à‡§≤‡•Ä ‡§ñ‡§æ‡§§‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§π‡•à, ‡§≤‡•á‡§ï‡§ø‡§® iAmX ‡§∏‡•ç‡§ü‡•â‡§ï, ‡§¨‡§ø‡§≤‡§ø‡§Ç‡§ó, ‡§¨‡§æ‡§∞‡§ï‡•ã‡§° ‡§î‡§∞ ‡§∏‡§æ‡§ß‡§æ‡§∞‡§£ ‡§¶‡•Å‡§ï‡§æ‡§® ‡§ï‡•á ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à - ‡§¨‡§π‡•Å‡§§ ‡§Ü‡§∏‡§æ‡§® ‡§î‡§∞ ‡§§‡•á‡§ú‡§º‡•§\""
        },
        {
            question: "üì± ‡§µ‡•á ‡§™‡•Ç‡§õ‡§§‡•á ‡§π‡•à‡§Ç: \"‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡•à‡§Ç ‡§´‡•ã‡§® ‡§™‡§∞ iAmX ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å? ‡§ï‡•ç‡§Ø‡§æ ‡§Ø‡§π ‡§Ü‡§∏‡§æ‡§® ‡§π‡•à?\"\n‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§Ç‡§ó‡•á?",
            example: "üí° ‡§â‡§¶‡§æ‡§π‡§∞‡§£: \"‡§π‡§æ‡§Å ‡§∏‡§∞, iAmX ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤, ‡§ü‡•à‡§¨‡§≤‡•á‡§ü ‡§Ø‡§æ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§™‡§∞ ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§Ø‡§π ‡§¶‡•Å‡§ï‡§æ‡§® ‡§ï‡•á ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§¨‡§π‡•Å‡§§ ‡§Ü‡§∏‡§æ‡§® ‡§π‡•à‡•§\""
        },
        {
            question: "üì¶ 1000+ ‡§Ü‡§á‡§ü‡§Æ ‡§µ‡§æ‡§≤‡•Ä ‡§è‡§ï ‡§¶‡•Å‡§ï‡§æ‡§® ‡§™‡•Ç‡§õ‡§§‡•Ä ‡§π‡•à: \"‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡§æ ‡§ê‡§™ ‡§¨‡§æ‡§∞‡§ï‡•ã‡§°, ‡§∏‡•ç‡§ü‡•â‡§ï, ‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§∏‡§Ç‡§≠‡§æ‡§≤ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à?\"\n‡§Ü‡§™ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§ï‡•à‡§∏‡•á ‡§∏‡§Æ‡§ù‡§æ‡§è‡§Ç‡§ó‡•á?",
            example: "üí° ‡§â‡§¶‡§æ‡§π‡§∞‡§£: \"‡§π‡§æ‡§Å ‡§∏‡§∞, ‡§¨‡§æ‡§∞‡§ï‡•ã‡§° ‡§∏‡•ç‡§ï‡•à‡§®, ‡§∏‡•ç‡§ü‡•â‡§ï ‡§á‡§®-‡§Ü‡§â‡§ü, ‡§¶‡•à‡§®‡§ø‡§ï ‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä ‡§î‡§∞ ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§∏‡§≠‡•Ä ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§Ø‡§π ‡§ï‡§à ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•ã‡§Ç ‡§µ‡§æ‡§≤‡•Ä ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§¶‡•Å‡§ï‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§\""
        },
        {
            question: "üß† ‡§Ü‡§™‡§ï‡•ã ‡§ï‡•ç‡§Ø‡§æ ‡§≤‡§ó‡§§‡§æ ‡§π‡•à ‡§ï‡§ø ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•ã iAmX ‡§ï‡•Ä ‡§∏‡§¨‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•à?\n2-3 ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡•§",
            example: "üí° ‡§â‡§¶‡§æ‡§π‡§∞‡§£: \"‡§ï‡§ø‡§∞‡§æ‡§®‡§æ ‡§∏‡•ç‡§ü‡•ã‡§∞, ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§ï‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®‡•á‡§Ç, ‡§ï‡§™‡§°‡§º‡•ã‡§Ç ‡§ï‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®‡•á‡§Ç - ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§â‡§®‡§ï‡•á ‡§™‡§æ‡§∏ ‡§â‡§ö‡•ç‡§ö ‡§∏‡•ç‡§ü‡•â‡§ï ‡§î‡§∞ ‡§¶‡•à‡§®‡§ø‡§ï ‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, ‡§î‡§∞ ‡§â‡§®‡•ç‡§π‡•á‡§Ç ‡§â‡§ö‡§ø‡§§ ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§£ ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§\""
        },
        {
            question: "üí∞ ‡§Ø‡§¶‡§ø ‡§ï‡•ã‡§à ‡§ó‡•ç‡§∞‡§æ‡§π‡§ï ‡§ï‡•Ä‡§Æ‡§§ ‡§î‡§∞ ‡§ë‡§´‡§º‡§∞ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡§§‡§æ ‡§π‡•à, ‡§§‡•ã ‡§Ü‡§™ ‡§¨‡§ø‡§®‡§æ ‡§Ö‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§≤‡§ó‡•á ‡§ï‡•à‡§∏‡•á ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§Ç‡§ó‡•á?",
            example: "üí° ‡§â‡§¶‡§æ‡§π‡§∞‡§£: \"‡§∏‡§∞, ‡§™‡•Ç‡§∞‡•Ä ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‚Çπ1500/‡§Æ‡§æ‡§π‡•§ ‡§Ø‡§¶‡§ø ‡§Ü‡§™ 1 ‡§µ‡§∞‡•ç‡§∑ ‡§≤‡•á‡§§‡•á ‡§π‡•à‡§Ç, ‡§§‡•ã ‡§Ü‡§™‡§ï‡•ã 1 ‡§Æ‡§π‡•Ä‡§®‡§æ ‡§Æ‡•Å‡§´‡•ç‡§§ ‡§Æ‡§ø‡§≤‡§§‡§æ ‡§π‡•à‡•§ ‡§ï‡•ã‡§à ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§∂‡•Å‡§≤‡•ç‡§ï ‡§®‡§π‡•Ä‡§Ç - ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡•§\""
        },
        {
            question: "üéØ ‡§Ö‡§™‡§®‡•á ‡§™‡§π‡§≤‡•á 30 ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç, ‡§Ü‡§™ ‡§ï‡§ø‡§§‡§®‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®‡•ã‡§Ç ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å‡§ó‡•á? ‡§Ü‡§™ ‡§ï‡§ø‡§§‡§®‡•á ‡§¨‡§Ç‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç?\n‡§è‡§ï ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï, ‡§à‡§Æ‡§æ‡§®‡§¶‡§æ‡§∞ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¶‡•á‡§Ç‡•§",
            example: "üí° ‡§â‡§¶‡§æ‡§π‡§∞‡§£: \"‡§Æ‡•à‡§Ç 50-60 ‡§¶‡•Å‡§ï‡§æ‡§®‡•ã‡§Ç ‡§™‡§∞ ‡§ú‡§æ‡§ä‡§Å‡§ó‡§æ‡•§ ‡§Æ‡•à‡§Ç 15-25 ‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§∏‡•á ‡§¨‡§Ç‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å‡•§ ‡§Ö‡§ó‡§∞ ‡§Æ‡•Å‡§ù‡•á ‡§Æ‡§≤‡•ç‡§ü‡•Ä-‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ö‡•á‡§® ‡§Æ‡§ø‡§≤‡§§‡•Ä ‡§π‡•à‡§Ç, ‡§§‡•ã ‡§Æ‡•à‡§Ç 1-2 ‡§Æ‡§π‡•Ä‡§®‡•á ‡§Æ‡•á‡§Ç 50+ ‡§™‡§æ‡§∞ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å‡•§\""
        }
    ]
};
const localizedButtonText = {
    english: {
        record: 'üé§ Record Voice',
        stop: '‚èπÔ∏è Stop Recording'
    },
    telugu: {
        record: 'üé§ ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø',
        stop: '‚èπÔ∏è ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡∞ø‡∞Ç‡∞ó‡±ç ‡∞Ü‡∞™‡∞Ç‡∞°‡∞ø'
    },
    hindi: {
        record: 'üé§ ‡§Ü‡§µ‡§æ‡§ú ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§ï‡§∞‡•á‡§Ç',
        stop: '‚èπÔ∏è ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡§ø‡§Ç‡§ó ‡§∞‡•ã‡§ï‡•á‡§Ç'
    }
};
let currentQuestionIndex = 0;

// --- State Persistence Functions ---
function saveState() {
    const stateToSave = {
        userResponses,
        currentQuestionIndex,
        state
    };
    localStorage.setItem('imxInterviewState', JSON.stringify(stateToSave));
}

function loadState() {
    const savedStateJSON = localStorage.getItem('imxInterviewState');
    if (savedStateJSON) {
        return JSON.parse(savedStateJSON);
    }
    return null;
}

function clearState() {
    localStorage.removeItem('imxInterviewState');
}

// Q9: Pay Structure Clarity
const payStructureOptions = [
    { label: '‚úÖ Yes, I understand clearly', value: 'yes' },
    { label: 'ü§ù Willing to discuss', value: 'discuss' },
    { label: '‚ùå No, I need a fixed salary', value: 'no' }
];

// Q10: Training Commitment
const trainingOptions = [
    { label: '‚úÖ Yes, I can come', value: 'yes' },
    { label: 'üì≤ Remote preferred', value: 'remote' },
    { label: 'ü§ù Willing to discuss', value: 'discuss' }
];

// New Language Options
const languageOptions = [
    { label: 'üîò English', value: 'english' },
    { label: 'üîò ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä', value: 'hindi' },
    { label: 'üîò ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å', value: 'telugu' }
];

// --- Media Recorder ---
let mediaRecorder = null;
let audioChunks = [];

const aadhaarConsentOptions = [
    { label: 'Yes', value: 'yes' },
    { label: 'No', value: 'no' }
];

const localizedMessages = {
    english: {
        resume: 'Resuming your interview...',
        paused: '‚è∏Ô∏è Your interview is paused. When you return, please choose an option to continue.',
        welcome: 'Welcome back! It looks like you have a paused interview.',
        noSaved: 'No saved session found. Say "Hi" to start a new one.',
        noProblem: 'No problem. Say "Hi" to start a new interview!',
        btnResume: '‚úÖ Yes, Resume',
        btnStartOver: '‚ùå No, Start Over',
        btnPause: '‚è∏Ô∏è Pause Interview',
        startFirst: "Great! Let's start with the first question.",
        resumeWord: 'Resume',
        voiceOnly: 'üé§ REPLY VIA VOICE MESSAGE ONLY',
        invalidName: 'Please enter a valid name using only letters and spaces.'
    },
    telugu: {
        resume: '‡∞Æ‡±Ä ‡∞á‡∞Ç‡∞ü‡∞∞‡±ç‡∞µ‡±ç‡∞Ø‡±Ç‡∞®‡±Å ‡∞§‡∞ø‡∞∞‡∞ø‡∞ó‡∞ø ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞Æ‡±Å...',
        paused: '‚è∏Ô∏è ‡∞Æ‡±Ä ‡∞á‡∞Ç‡∞ü‡∞∞‡±ç‡∞µ‡±ç‡∞Ø‡±Ç ‡∞®‡∞ø‡∞≤‡∞ø‡∞™‡∞ø‡∞µ‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø. ‡∞§‡∞ø‡∞∞‡∞ø‡∞ó‡∞ø ‡∞µ‡∞ö‡±ç‡∞ö‡∞ø‡∞®‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å, ‡∞ï‡±ä‡∞®‡∞∏‡∞æ‡∞ó‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞í‡∞ï ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï‡∞®‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø.',
        welcome: '‡∞Æ‡∞≥‡±ç‡∞≤‡±Ä ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç! ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞í‡∞ï ‡∞®‡∞ø‡∞≤‡∞ø‡∞™‡∞ø‡∞µ‡±á‡∞∏‡∞ø‡∞® ‡∞á‡∞Ç‡∞ü‡∞∞‡±ç‡∞µ‡±ç‡∞Ø‡±Ç‡∞®‡±Å ‡∞ï‡±ä‡∞®‡∞∏‡∞æ‡∞ó‡∞ø‡∞Ç‡∞ö‡∞µ‡∞ö‡±ç‡∞ö‡±Å.',
        noSaved: '‡∞è‡∞¶‡±à‡∞®‡∞æ ‡∞∏‡±á‡∞µ‡±ç ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞∏‡±Ü‡∞∑‡∞®‡±ç ‡∞ï‡∞®‡∞¨‡∞°‡∞≤‡±á‡∞¶‡±Å. ‡∞ï‡±ä‡∞§‡±ç‡∞§‡∞¶‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø "Hi" ‡∞Ö‡∞®‡∞ø ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞Ç‡∞°‡∞ø.',
        noProblem: '‡∞™‡∞∞‡∞ø‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø ‡∞≤‡±á‡∞¶‡±Å. ‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞á‡∞Ç‡∞ü‡∞∞‡±ç‡∞µ‡±ç‡∞Ø‡±Ç‡∞®‡±Å ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø "Hi" ‡∞Ö‡∞®‡∞ø ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞Ç‡∞°‡∞ø!',
        btnResume: '‚úÖ ‡∞Ö‡∞µ‡±Å‡∞®‡±Å, ‡∞ï‡±ä‡∞®‡∞∏‡∞æ‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
        btnStartOver: '‚ùå ‡∞≤‡±á‡∞¶‡±Å, ‡∞ï‡±ä‡∞§‡±ç‡∞§‡∞¶‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
        btnPause: '‚è∏Ô∏è ‡∞á‡∞Ç‡∞ü‡∞∞‡±ç‡∞µ‡±ç‡∞Ø‡±Ç‡∞®‡±Å ‡∞®‡∞ø‡∞≤‡∞ø‡∞™‡∞ø‡∞µ‡±á‡∞Ø‡∞Ç‡∞°‡∞ø',
        startFirst: '‡∞Ö‡∞¶‡±ç‡∞≠‡±Å‡∞§‡∞Ç! ‡∞Æ‡±ä‡∞¶‡∞ü‡∞ø ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞®‡±Å ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞¶‡±ç‡∞¶‡∞æ‡∞Ç.',
        resumeWord: '‡∞™‡±Å‡∞®‡∞É‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø',
        voiceOnly: 'üé§ ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞Æ‡±Ü‡∞∏‡±á‡∞ú‡±ç ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø',
        invalidName: '‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞Ö‡∞ï‡±ç‡∞∑‡∞∞‡∞æ‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ñ‡∞æ‡∞≥‡±Ä‡∞≤‡∞®‡±Å ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞ö‡±Ü‡∞≤‡±ç‡∞≤‡±Å‡∞¨‡∞æ‡∞ü‡±Å ‡∞Ö‡∞Ø‡±ç‡∞Ø‡±á ‡∞™‡±á‡∞∞‡±Å‡∞®‡±Å ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.'
    },
    hindi: {
        resume: '‡§Ü‡§™‡§ï‡§æ ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
        paused: '‚è∏Ô∏è ‡§Ü‡§™‡§ï‡§æ ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§∞‡•Å‡§ï‡§æ ‡§π‡•Å‡§Ü ‡§π‡•à‡•§ ‡§ú‡§¨ ‡§Ü‡§™ ‡§µ‡§æ‡§™‡§∏ ‡§Ü‡§è‡§Ç, ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™ ‡§ö‡•Å‡§®‡•á‡§Ç‡•§',
        welcome: '‡§µ‡§æ‡§™‡§∏‡•Ä ‡§™‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! ‡§ê‡§∏‡§æ ‡§≤‡§ó‡§§‡§æ ‡§π‡•à ‡§ï‡§ø ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§è‡§ï ‡§∞‡•Å‡§ï‡§æ ‡§π‡•Å‡§Ü ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§π‡•à‡•§',
        noSaved: '‡§ï‡•ã‡§à ‡§∏‡§π‡•á‡§ú‡§æ ‡§ó‡§Ø‡§æ ‡§∏‡§§‡•ç‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ‡•§ ‡§®‡§Ø‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è "Hi" ‡§ü‡§æ‡§á‡§™ ‡§ï‡§∞‡•á‡§Ç‡•§',
        noProblem: '‡§ï‡•ã‡§à ‡§¨‡§æ‡§§ ‡§®‡§π‡•Ä‡§Ç‡•§ ‡§®‡§Ø‡§æ ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è "Hi" ‡§ü‡§æ‡§á‡§™ ‡§ï‡§∞‡•á‡§Ç!',
        btnResume: '‚úÖ ‡§π‡§æ‡§Å, ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
        btnStartOver: '‚ùå ‡§®‡§π‡•Ä‡§Ç, ‡§®‡§Ø‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
        btnPause: '‚è∏Ô∏è ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§∞‡•ã‡§ï‡•á‡§Ç',
        startFirst: '‡§¨‡§π‡•Å‡§§ ‡§¨‡§¢‡§º‡§ø‡§Ø‡§æ! ‡§ö‡§≤‡§ø‡§è ‡§™‡§π‡§≤‡•á ‡§∏‡§µ‡§æ‡§≤ ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§',
        resumeWord: '‡§´‡§ø‡§∞ ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
        voiceOnly: 'üé§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ï‡•á‡§µ‡§≤ ‡§µ‡•â‡§Ø‡§∏ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§â‡§§‡•ç‡§§‡§∞ ‡§¶‡•á‡§Ç',
        invalidName: '‡§ï‡•É‡§™‡§Ø‡§æ ‡§ï‡•á‡§µ‡§≤ ‡§Ö‡§ï‡•ç‡§∑‡§∞‡•ã‡§Ç ‡§î‡§∞ ‡§∞‡§ø‡§ï‡•ç‡§§ ‡§∏‡•ç‡§•‡§æ‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§è‡§ï ‡§µ‡•à‡§ß ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§'
    }
};

function getLang() {
    return userResponses.languagePreference || 'english';
}

function addMessage(text, sender = 'bot') {
    const bubble = document.createElement('div');
    bubble.className = `chat-bubble ${sender}`;
    bubble.innerHTML = text.replace(/\n/g, '<br>'); // Support line breaks
    chatWindow.appendChild(bubble);
    chatWindow.scrollTop = chatWindow.scrollHeight;
}

function addFileMessage(file, sender = 'user') {
    const bubble = document.createElement('div');
    bubble.className = `chat-bubble ${sender}`;
    if (file.type.startsWith('image/')) {
        const img = document.createElement('img');
        img.src = URL.createObjectURL(file);
        img.style.maxWidth = '180px';
        img.style.display = 'block';
        bubble.appendChild(img);
    } else if (file.type === 'application/pdf') {
        const link = document.createElement('a');
        link.href = URL.createObjectURL(file);
        link.textContent = 'View PDF';
        link.target = '_blank';
        bubble.appendChild(link);
    } else {
        bubble.textContent = 'File uploaded';
    }
    chatWindow.appendChild(bubble);
    chatWindow.scrollTop = chatWindow.scrollHeight;
}

function addAudioMessage(audioBlob, sender = 'user') {
    const bubble = document.createElement('div');
    bubble.className = `chat-bubble ${sender}`;
    const audio = document.createElement('audio');
    audio.controls = true;
    audio.src = URL.createObjectURL(audioBlob);
    bubble.appendChild(audio);
    chatWindow.appendChild(bubble);
    chatWindow.scrollTop = chatWindow.scrollHeight;
}

function showTypingIndicator() {
    const indicator = document.createElement('div');
    indicator.className = 'chat-bubble bot typing-indicator';
    indicator.innerHTML = '<span></span><span></span><span></span>';
    chatWindow.appendChild(indicator);
    chatWindow.scrollTop = chatWindow.scrollHeight;
}

function hideTypingIndicator() {
    const indicator = chatWindow.querySelector('.typing-indicator');
    if (indicator) {
        indicator.remove();
    }
}

// --- Bot Functions ---

function botAskFullName() {
    addMessage('What is your full name?');
    state = 'waiting_for_name';
}

function botThankUser(name) {
    addMessage(`Thank you, ${name}!`);
    showTypingIndicator();
    setTimeout(() => {
        hideTypingIndicator();
        botAskResume();
    }, 600);
}

function botRepromptFullName() {
    addMessage('Please tell me your full name.');
    repromptCount++;
    if (repromptCount >= maxReprompts) {
        addMessage('We could not get your name. Please refresh to try again.');
        state = 'done';
    }
}

function botAskResume() {
    addMessage('Please upload your latest resume.');
    fileInput.accept = ""; // Allow all file types
    uploadBtn.style.display = 'block';
    state = 'waiting_for_resume_upload';
}

function botAskWhatsapp() {
    addMessage('üì≤ Please enter your WhatsApp number for future communication.');
    state = 'waiting_for_whatsapp';
}

function botAskIfReadyForInterview() {
    clearTimeout(interviewTimeout);

    addMessage(`‚úÖ Thank you. Now we'll begin your voice interview round.
üïí It takes around 15‚Äì20 minutes.
üéôÔ∏è Please send voice message answers only ‚Äì typed answers will not be accepted.
üéß Make sure you're in a quiet place or wear earphones so your answers are clear.

To begin your interview, please select your preferred reply language:`);
    
    showOptions(languageOptions, 'language_preference_and_start');

    addMessage(`‚ùå If you're not ready now, simply reply "Interview Ready" whenever you want to begin later.`);

    state = 'waiting_for_language_selection_to_start';

    interviewTimeout = setTimeout(() => {
        if (state === 'waiting_for_language_selection_to_start') {
            addMessage('It seems you have been inactive for a while. Please type "Interview Ready" when you are set to begin.');
            state = 'waiting_for_hi';
        }
    }, 300000); // 5 minutes = 300,000 ms
}

function askPayStructure() {
    setTimeout(() => {
        addMessage('üíº This is an incentive-only role (no fixed pay) for the first 3‚Äì6 months.<br>üìå You will earn:<br>‚Äì 15% flat commission per sale (unlimited)<br>‚Äì Bonus if you perform well<br>‚Äì Full-time fixed pay onboarding only after review<br><br>üí° Example: You close 20 stores ‚Üí ‚Çπ1,650 √ó 20 = ‚Çπ33,000/month.<br>If you target chain outlets or referrals, even higher is possible.<br><br>‚úÖ Do you fully understand this pay system?<br>Please choose one:<br>‚úÖ Yes, I understand clearly<br>ü§ù Willing to discuss<br>‚ùå No, I need a fixed salary<br>üëâ REPLY WITH ONE OPTION ONLY');
        showOptions(payStructureOptions, 'pay_structure');
    }, 600);
}

function askTrainingCommitment() {
    setTimeout(() => {
        addMessage('üß† We give 2 weeks of training before you start.<br>üìç It will be 3‚Äì4 hours/day in Banjara Hills, Road No. 12.<br>This is to help you feel confident client during demos and understand what you are selling.<br><br>‚úÖ Are you willing to attend this training?<br>Please choose one:<br>‚úÖ Yes, I can come<br>üì≤ Remote preferred<br>ü§ù Willing to discuss<br>üëâ REPLY WITH ONE OPTION ONLY');
        showOptions(trainingOptions, 'training_commitment');
    }, 600);
}

function askAadhaarConsent() {
    addMessage('If you understood the entire role specifications, please upload the Aadhaar.');
    showOptions(aadhaarConsentOptions, 'aadhaar_consent');
}

function botAskAadhaar() {
    addMessage('üìé Please upload your Aadhaar as a PDF or Image file.');
    fileInput.accept = ".pdf,.jpg,.jpeg,.png";
    uploadBtn.style.display = 'block';
    state = 'waiting_for_aadhaar_upload';
}

function showOptions(options, stateKey) {
    const bubble = document.createElement('div');
    bubble.className = 'chat-bubble bot';
    const buttonContainer = document.createElement('div');
    buttonContainer.style.display = 'flex';
    buttonContainer.style.gap = '10px';
    buttonContainer.style.marginTop = '10px';

    options.forEach(opt => {
        const btn = document.createElement('button');
        btn.textContent = opt.label;
        btn.className = 'option-btn';
        btn.onclick = () => {
            addMessage(opt.label, 'user');
            bubble.remove();
            if (stateKey === 'pay_structure') {
                userResponses.payStructure = opt.value;
                if (opt.value === 'no') {
                    addMessage('Thank you for your honesty. This role might not be the right fit, as it is incentive-only for the first few months.');
                    botEndInterview();
                } else {
                    askTrainingCommitment();
                }
            } else if (stateKey === 'training_commitment') {
                userResponses.trainingCommitment = opt.value;
                askAadhaarConsent();
            } else if (stateKey === 'aadhaar_consent') {
                userResponses.aadhaarConsent = opt.value;
                if (opt.value === 'yes') {
                    botAskAadhaar();
                } else {
                    botEndInterview();
                }
            } else if (stateKey === 'language_preference_and_start') {
                clearTimeout(interviewTimeout);
                userResponses.languagePreference = opt.value;
                addMessage(localizedMessages[userResponses.languagePreference].startFirst);
                askVoiceQuestion(currentQuestionIndex);
            } else if (stateKey === 'resume_confirmation') {
                if (opt.value === 'resume') {
                    resumeInterview();
                } else { // Start Over
                    clearState();
                    addMessage(localizedMessages[getLang()].noProblem);
                    state = 'waiting_for_hi';
                }
            }
        };
        buttonContainer.appendChild(btn);
    });
    bubble.appendChild(buttonContainer);
    chatWindow.appendChild(bubble);
    chatWindow.scrollTop = chatWindow.scrollHeight;
    if (stateKey === 'pay_structure') {
        state = 'waiting_for_pay_structure';
    } else if (stateKey === 'training_commitment') {
        state = 'waiting_for_training_commitment';
    } else if (stateKey === 'language_preference_and_start') {
        state = 'waiting_for_language_selection_to_start';
    }
}

function askVoiceQuestion(index) {
    clearTimeout(interviewTimeout); 

    const language = userResponses.languagePreference || 'english';
    const questions = localizedQuestions[language];
    const buttonText = localizedButtonText[language];

    if (index < questions.length) {
        const question = questions[index];
        showTypingIndicator();
        setTimeout(() => {
            hideTypingIndicator();
            let fullMessage = `${localizedMessages[language].voiceOnly}<br><br>${question.question}`;
            if (question.example) {
                fullMessage += `<br><br>${question.example}`;
            }
            addMessage(fullMessage);
            micBtn.textContent = buttonText.record;
            micBtn.style.display = 'block';
            pauseBtn.textContent = localizedMessages[language].btnPause;
            pauseBtn.style.display = 'block';
        }, 800);
        state = 'waiting_for_voice_answer';

        interviewTimeout = setTimeout(() => {
            if (state === 'waiting_for_voice_answer') {
                addMessage('It seems you have been inactive for a while. Please type "Interview Ready" to restart the interview process.');
                state = 'waiting_for_hi';
                micBtn.style.display = 'none';
                pauseBtn.style.display = 'none';
            }
        }, 300000); // 5 minutes
    } else {
        micBtn.style.display = 'none';
        pauseBtn.style.display = 'none';
        askPayStructure();
    }
}

function addBotAudioMessage(audioSrc) {
    const bubble = document.createElement('div');
    bubble.className = 'chat-bubble bot';
    const audio = document.createElement('audio');
    audio.controls = true;
    audio.src = audioSrc;
    audio.autoplay = true;
    bubble.appendChild(audio);
    chatWindow.appendChild(bubble);
    chatWindow.scrollTop = chatWindow.scrollHeight;
}

async function submitData() {
    const safeName = userResponses.name.replace(/[^a-zA-Z0-9_-]/g, '_');
    const submissionId = `${safeName}_${Date.now()}`;

    // --- Upload Files ---
    const uploadFile = async (file, path) => {
        if (!file) return null;
        const { data, error } = await supabaseClient.storage
            .from('user-uploads')
            .upload(path, file);
        if (error) {
            console.error('Upload Error:', error.message);
            return null;
        }
        return data.path;
    };

    let resumePath = null;
    if (userResponses.resumeFile) {
        resumePath = await uploadFile(userResponses.resumeFile, `${submissionId}/resume-${userResponses.resumeFile.name}`);
    }

    let aadhaarPath = null;
    if (userResponses.aadhaarFile) {
        aadhaarPath = await uploadFile(userResponses.aadhaarFile, `${submissionId}/aadhaar-${userResponses.aadhaarFile.name}`);
    }

    let languagePath = null;
    if (userResponses.languageAudio) {
        languagePath = await uploadFile(userResponses.languageAudio, `${submissionId}/language-preference.webm`);
    }

    const interviewAnswerPaths = [];
    for (let i = 0; i < userResponses.interviewAnswers.length; i++) {
        const path = await uploadFile(userResponses.interviewAnswers[i], `${submissionId}/interview-answer-${i + 1}.webm`);
        if (path) interviewAnswerPaths.push(path);
    }

    // --- Store Data in Database ---
    const { data, error } = await supabaseClient
        .from('submissions')
        .insert([{
            full_name: userResponses.name,
            whatsapp_number: userResponses.whatsappNumber,
            resume_file_path: resumePath,
            aadhaar_file_path: aadhaarPath,
            language_audio_path: languagePath,
            pay_structure: userResponses.payStructure,
            training_commitment: userResponses.trainingCommitment,
            aadhaar_consent: userResponses.aadhaarConsent,
            interview_answers: interviewAnswerPaths
        }]);

    if (error) {
        console.error('Database Error:', error);
        addMessage("‚ö†Ô∏è An error occurred while saving. Please try again later.");
    } else {
        addBotAudioMessage('final-thankyou.mp3');
    }
}

function botEndInterview() {
    submitData();
    clearState();
    state = 'done';
}

function resumeInterview() {
    const saved = loadState();
    if (saved) {
        Object.assign(userResponses, saved.userResponses);
        currentQuestionIndex = saved.currentQuestionIndex;
        state = saved.state;
        addMessage(localizedMessages[getLang()].resume);
        if (state === 'waiting_for_voice_answer') {
            askVoiceQuestion(currentQuestionIndex);
        } else if (state === 'waiting_for_pay_structure') {
            askPayStructure();
        } else if (state === 'waiting_for_training_commitment') {
            askTrainingCommitment();
        } else if (state === 'waiting_for_aadhaar_consent') {
            askAadhaarConsent();
        }
    } else {
        addMessage(localizedMessages[getLang()].noSaved);
        state = 'waiting_for_hi';
    }
}

// --- Event Listeners ---

chatForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const message = chatInput.value.trim();
    if (message) {
        addMessage(message, 'user');
        chatInput.value = '';

        if (message.toLowerCase() === 'resume') {
            resumeInterview();
            return;
        }
        
        if (message.toLowerCase() === 'interview ready') {
            state = 'waiting_for_interview_ready_confirmation';
        }

        switch (state) {
            case 'waiting_for_hi':
                if (message.toLowerCase().includes('hi') || message.toLowerCase().includes('hello') || message.toLowerCase() === 'interview ready') {
                    repromptCount = 0;
                    botAskFullName();
                } else {
                    botRepromptFullName();
                }
                break;
            case 'waiting_for_name':
                if (/^[a-zA-Z\s]+$/.test(message)) {
                    userResponses.name = message;
                    repromptCount = 0;
                    botThankUser(message);
                } else {
                    addMessage(localizedMessages[getLang()].invalidName);
                }
                break;
            case 'waiting_for_whatsapp':
                 if (/\d{10}/.test(message.replace(/\D/g, ''))) {
                    userResponses.whatsappNumber = message;
                    repromptCount = 0;
                    botAskIfReadyForInterview();
                } else {
                    addMessage('Please enter a valid 10-digit WhatsApp number.');
                }
                break;
             case 'waiting_for_interview_ready_confirmation':
                repromptCount = 0;
                botAskIfReadyForInterview();
                break;
            case 'paused':
                if (message.toLowerCase() !== 'resume') {
                    addMessage('Your interview is currently paused. Please type "Resume" to continue.');
                }
                break;
            case 'waiting_for_language_selection_to_start':
            case 'waiting_for_voice_answer':
            case 'waiting_for_pay_structure':
            case 'waiting_for_training_commitment':
            case 'waiting_for_aadhaar_consent':
                 addMessage('Please use the buttons or the voice recorder to reply.');
                 break;

        }
    }
});

uploadBtn.addEventListener('click', () => fileInput.click());

fileInput.addEventListener('change', function() {
    if (!fileInput.files || fileInput.files.length === 0) {
        return; // No file selected
    }

    const uploadedFile = fileInput.files[0];

    // --- Validation for Resume ---
    if (state === 'waiting_for_resume_upload') {
        // If valid, proceed
        userResponses.resumeFile = uploadedFile;
        addFileMessage(uploadedFile, 'user');
        uploadBtn.style.display = 'none';
        showTypingIndicator();
        setTimeout(() => {
            hideTypingIndicator();
            botAskWhatsapp();
        }, 600);
    }
    // --- Validation for Aadhaar ---
    else if (state === 'waiting_for_aadhaar_upload') {
        const isValidAadhaar = uploadedFile.type === 'application/pdf' || uploadedFile.type.startsWith('image/');
        if (!isValidAadhaar) {
            addMessage('‚ö†Ô∏è Invalid file type. Please upload your Aadhaar as a PDF or an Image file.');
            fileInput.value = ''; // Reset the input
            return; // Stop processing and wait for a new upload
        }
        // If valid, proceed
        userResponses.aadhaarFile = uploadedFile;
        addFileMessage(uploadedFile, 'user');
        uploadBtn.style.display = 'none';
        botEndInterview();
    }
});

pauseBtn.addEventListener('click', () => {
    saveState();
    const lang = getLang();
    const pausedMsg = localizedMessages[lang].paused.replace('{resumeWord}', localizedMessages[lang].resumeWord);
    addMessage(pausedMsg);
    micBtn.style.display = 'none';
    pauseBtn.style.display = 'none';
    clearTimeout(interviewTimeout); // Stop the inactivity timer
    state = 'paused';
});

micBtn.addEventListener('click', async function(e) {
    e.preventDefault();
    chatInput.disabled = true; // Disable text input during recording

    const language = userResponses.languagePreference || 'english';
    const buttonText = localizedButtonText[language];

    if (micBtn.dataset.recording === 'true') {
        // Stop recording
        mediaRecorder.stop();
        micBtn.textContent = buttonText.record;
        micBtn.dataset.recording = '';
        micBtn.disabled = true;
    } else {
        // Start recording
        try {
            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
            mediaRecorder = new MediaRecorder(stream);
            audioChunks = [];
            mediaRecorder.ondataavailable = event => {
                audioChunks.push(event.data);
            };
            mediaRecorder.onstop = () => {
                const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });
                addAudioMessage(audioBlob, 'user');
                micBtn.style.display = 'none';
                micBtn.disabled = false;
                chatInput.disabled = false; // Re-enable text input

                if (state === 'waiting_for_voice_answer') {
                    userResponses.interviewAnswers.push(audioBlob);
                    currentQuestionIndex++;
                    askVoiceQuestion(currentQuestionIndex);
                }
            };
            mediaRecorder.start();
            micBtn.textContent = buttonText.stop;
            micBtn.dataset.recording = 'true';
        } catch (err) {
            addMessage('Microphone access denied or not available.');
            chatInput.disabled = false;
        }
    }
});

function initializeChat() {
    const savedState = loadState();
    const lang = savedState && savedState.userResponses && savedState.userResponses.languagePreference ? savedState.userResponses.languagePreference : 'english';
    if (savedState && savedState.state !== 'done') { 
        addMessage(localizedMessages[lang].welcome);
        showOptions([
            { label: localizedMessages[lang].btnResume, value: 'resume' },
            { label: localizedMessages[lang].btnStartOver, value: 'start_over' }
        ], 'resume_confirmation');
        state = 'waiting_for_resume_confirmation';
    } else {
        addMessage('Say "Hi" to start the chat!');
        state = 'waiting_for_hi';
    }
}

// Initial bot message
initializeChat(); 